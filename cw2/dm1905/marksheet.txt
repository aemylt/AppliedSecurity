-------------------------------------------------------------------------------

1. Instructions

- replace any [...] with free text,
  and
- replace the [?] with an X if you have completed that stage,
- replace the [?] with an * if you have attempted that stage, but you know
  it doesn't work completely; document why you think it doesn't work, plus
  what you would do to fix the problem, at the end of the marksheet.

-------------------------------------------------------------------------------

2. Information

So that we can calibrate and improve the assignment in the future, give us
a rough idea how long (in hours) you spent on it *in total*:

effort : 23hours

-------------------------------------------------------------------------------

3. Citation

Clearly it might have an influence on your mark, but the use of third-party
resources *is* allowed *if* correctly cited (unless explicitly prohibited 
by the assignment description of course).  Let us know what third-party 
source code or resources you used (if any) so it's clear what's your work 
and what isn't:

[...]

-------------------------------------------------------------------------------

4. Marking

The following gives a stage-by-stage description of the assignment marking
scheme.  Note this acts as an indicative guideline only, including weights
for each more obvious element (e.g., the functional correctness of a stage).
For example, other elements outside this list *often* warrant an increase
or decrease in marks; examples include hard to quantify features such as
the style or efficiency of a solution.

[X] Stage 1 : an attack based on error messages

              - Successfully reversed RSADP    primitive             ( 50%)
              - Successfully reversed EME-OAEP primitive             ( 50%)

                Attack result : [172600005846B4186A65CFB1D8BB7B7C80D2C39C88399D06C9D901BBA0389A62AEEA3A75C40EF357C5FC]

[X] Stage 2 : an attack based on execution time

              - Efficiency  of attack strategy                       ( 20%)
              - Robustness  of attack strategy                       ( 20%)
              - Correctness of attack strategy                       ( 60%)

                Attack result : [C7C13DFB6FE8F33B]

[?] Stage 3 : an attack based on an injected fault

              - Efficiency  of attack strategy                       ( 20%)
              - Robustness  of attack strategy                       ( 20%)
              - Correctness of attack strategy                       ( 60%)

                Attack result : [...]

[?] Stage 4 : an attack based on power consumption

              - Efficiency  of attack strategy                       ( 20%)
              - Robustness  of attack strategy                       ( 20%)
              - Correctness of attack strategy                       ( 60%)

                Attack result : [...]

[?] Stage 5 : analysis                                               (100%)

                                                                     ------
                                                                     (500%)

-------------------------------------------------------------------------------

5. Documentation

Any other documentation, notes or comments that you think are important or
might be easy to overlook (e.g., a subtle issue or technique in associated
source code) should go here:

As per section 3.2 of Manger's paper, the attack for stage 1 is not guaranteed
to work if N < 2B. I looked briefly at D. Bleichenbacher's 1998 paper
describing an attack which uses multiple ranges, but concluded that the
complexity of creating those ranges as described in the paper and the increase
in the number of interactions with the system required was not worthwhile.

The attack for stage 2 is currently set to stop testing a key after more than
64 bits. This can be changed if required at line 124.

13000 ciphertexts was chosen as it has consistently managed to retrieve the key
correctly without needing to repeat the whole loop.

-------------------------------------------------------------------------------
